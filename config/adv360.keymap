/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "hmk";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 37 38 39 40 41 42 43 44 53 54 55 56 57 58 68 69 70 71 72 73 74 35 36 37 38 52 53 65 66 67 68 69 70 71 72 73>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
        };

        hmsl: hmsl {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 37 38 39 40 41 42 43 44 45 53 54 55 56 57 58 59 68 69 70 71 72 73 74 75 35 36 37 38 52 53 65 66 67 68 69>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <80>;
        };

        hmsr: hmsr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <80>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
        };

        space: space {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <110>;
        };

        M_UndoRedo: M_UndoRedo {
            compatible = "zmk,behavior-mod-morph";
            label = "M_UNDOREDO";
            bindings = <&kp LG(Z)>, <&kp LS(LG(Z))>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Win_Base_Prev_Word {
            bindings = <&kp LC(LEFT)>;
            key-positions = <71 72>;
            layers = <3>;
            timeout-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MacBase {
            bindings = <
&kp GRAVE  &kp N1       &kp N2       &kp N3        &kp N4          &kp N5  &mo 7                                                              &mo 7      &kp N6  &kp N7          &kp N8                &kp N9            &kp N0                    &kp MINUS
&kp TAB    &kp Q        &kp W        &kp E         &kp R           &kp T   &none                                                              &none      &kp Y   &kp U           &kp I                 &kp O             &kp P                     &kp BSLH
&kp ESC    &hml LGUI A  &hml LALT S  &hml LCTRL D  &hmsl LSHIFT F  &kp G   &none               &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &hmsr RSHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z        &kp X        &kp C         &kp V           &kp B                                  &kp HOME      &kp PG_UP                        &kp N   &kp M           &kp COMMA             &kp DOT           &kp FSLH                  &kp RSHFT
&mo 2      &M_UndoRedo  &kp LG(X)    &kp LG(C)     &kp LG(V)               &space 1 BACKSPACE  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp LEFT        &kp DOWN              &kp UP_ARROW      &kp RIGHT                 &mo 2
            >;
        };

        MacSymbols {
            bindings = <
&kp BACKSLASH    &kp POUND         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS           &kp PERCENT      &trans                                                          &mo 7      &kp N6  &kp KP_NUM       &kp KP_EQUAL     &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp MINUS
&kp QUESTION     &kp LEFT_BRACE    &kp DOUBLE_QUOTES     &kp SINGLE_QUOTE       &kp RIGHT_BRACE    &kp KP_MINUS     &kp QUESTION                                                    &none      &kp Y   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS     &kp BSLH
&kp EXCLAMATION  &kp LEFT_BRACKET  &kp KP_EQUAL          &kp UNDERSCORE         &kp RIGHT_BRACKET  &kp KP_MULTIPLY  &kp EXCLAMATION  &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SEMICOLON    &kp SQT
&kp COLON        &kp LESS_THAN     &kp AMPERSAND         &kp PIPE               &kp GREATER_THAN   &kp KP_SLASH                                 &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1        &kp COMMA        &kp PERIOD       &kp SLASH        &kp RSHFT
&mo 2            &kp CARET         &kp TILDE             &kp AT                 &kp DOLLAR                          &kp BSPC         &kp TAB    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE          &kp LEFT         &kp DOWN         &kp UP_ARROW     &kp RIGHT        &mo 2
            >;
        };

        MacNavigation {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 7   &kp F7    &kp F8    &kp F9        &kp F10    &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans    &trans    &trans        &trans     &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans    &trans    &trans        &trans     &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans            &trans    &trans        &trans     &trans   &trans
            >;
        };

        WinBase {
            bindings = <
&kp EQUAL   &kp N1        &kp N2       &kp N3           &kp N4          &kp N5  &trans                                                  &trans  &kp N6  &kp N7          &kp N8            &kp N9       &kp N0                &kp MINUS
&kp TAB     &kp Q         &kp W        &kp E            &kp R           &kp T   &none                                                   &trans  &kp Y   &kp U           &kp I             &kp O        &kp P                 &kp NON_US_BACKSLASH
&kp ESCAPE  &hml LCTRL A  &hml LWIN S  &hml LEFT_ALT D  &hmsl LSHIFT F  &kp G   &trans              &trans  &trans      &trans  &trans  &trans  &kp H   &hmsr RSHIFT J  &hml RIGHT_ALT K  &hmr RWIN L  &hmr RCTRL SEMICOLON  &kp APOS
&kp LSHIFT  &kp Z         &kp X        &kp C            &kp V           &kp B                               &trans      &trans                  &kp N   &kp M           &kp COMMA         &kp PERIOD   &kp SLASH             &kp RSHIFT
&trans      &trans        &kp LC(X)    &kp LC(C)        &kp LC(V)               &space 4 BACKSPACE  &trans  &trans      &trans  &trans  &trans          &kp LEFT        &kp DOWN          &kp UP       &kp RIGHT             &trans
            >;
        };

        WinSymbols {
            bindings = <
&kp GRAVE     &kp BACKSLASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS           &kp PERCENT   &trans                                      &trans  &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans         &trans
&kp QUESTION  &kp LEFT_BRACE    &kp DOUBLE_QUOTES     &kp SINGLE_QUOTE       &kp RIGHT_BRACE    &kp MINUS     &trans                                      &trans  &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans         &trans
&kp EXCL      &kp LEFT_BRACKET  &kp EQUAL             &kp UNDER              &kp RIGHT_BRACKET  &kp ASTERISK  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SEMICOLON  &trans
&kp COLON     &kp LESS_THAN     &kp AMPERSAND         &kp PIPE               &kp GREATER_THAN   &kp SLASH                     &trans      &trans                  &trans  &kp KP_NUMBER_0  &kp COMMA        &kp PERIOD       &trans         &trans
&kp POUND     &kp CARET         &kp TILDE             &kp AT                 &kp DOLLAR                       &trans  &trans  &trans      &trans  &trans  &trans          &trans           &trans           &trans           &trans         &trans
            >;
        };

        WinNavigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        WinFN {
            bindings = <
&none  &none      &none     &none     &none       &none  &none                                  &none  &none  &kp F7  &kp F8  &kp F9  &kp F12  &none
&none  &none      &none     &none     &none       &none  &none                                  &none  &none  &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &kp LCTRL  &kp LGUI  &kp LALT  &kp LSHIFT  &none  &none  &none  &none      &none  &none  &none  &none  &kp F1  &kp F2  &kp F3  &kp F10  &none
&none  &none      &none     &none     &none       &none                &none      &none                &none  &none   &none   &none   &none    &none
&none  &none      &none     &none     &none              &none  &none  &none      &none  &none  &none         &none   &none   &none   &none    &none
            >;
        };

        Mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none                 &none                 &none       &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none       &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &kp K_PREV            &kp K_PLAY_PAUSE      &kp K_NEXT  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp K_MUTE  &none  &none
&none  &none         &none         &none         &none                       &to 0        &to 3  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC            &bl BL_DEC            &none       &none  &none
            >;
        };
    };
};
